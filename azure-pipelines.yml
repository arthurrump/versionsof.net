schedules:
- cron: 0 */3 * * 1-5
  displayName: "Weekday Update"
  branches:
    include:
    - master
  always: true

jobs:
- job: build
  displayName: "Build site"
  pool:
    vmImage: "windows-2019"
  variables:
    FAKE_DETAILED_ERRORS: 'true'
  steps:
  - task: UseDotNet@2
    displayName: "Use .NET"
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
  - task: DotNetCoreCLI@2
    displayName: "Configure secrets"
    inputs:
      command: 'run'
      arguments: '-- -t configure -- $(GitHub.ClientId) $(GitHub.ClientSecret)'
  - task: DotNetCoreCLI@2
    displayName: "Generate site"
    inputs:
      command: 'run'
      arguments: '-- -t generate'
  - publish: $(Build.SourcesDirectory)/public
    artifact: public

- deployment: netlify
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: "Netlify Deploy"
  pool:
    vmImage: "ubuntu-latest"
  environment: netlify-prod
  dependsOn: [ build ]
  strategy:
    runOnce:
      deploy:
        steps:
        - task: Npm@1
          displayName: "Install Netlify"
          inputs:
            command: custom
            customCommand: install netlify-cli
        - download: current
          artifact: public
        - script: npx netlify deploy --prod --dir $(Pipeline.Workspace)/public
          displayName: "Netlify Deploy"
          env:
            NETLIFY_AUTH_TOKEN: $(Netlify.Token)
            NETLIFY_SITE_ID: $(Netlify.SiteId)
